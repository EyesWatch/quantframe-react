name: Build (Tauri)

on:
  push:
    branches: [ main ]
  pull_request:
  # Publie une Release et attache les bundles quand tu crées un tag vX.Y.Z
  tags:
    - "v*.*.*"

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest] # , macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (Corepack)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm -v

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: OS deps (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            curl \
            jq

      # macOS: uncomment si tu veux builder pour macOS
      # - name: macOS env (optional)
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     echo "No extra deps needed for unsigned build."

      - name: Install JS deps
        run: pnpm install --frozen-lockfile=false

      # ⚠️ Si le README du projet te demande de supprimer un champ "pubkey" dans tauri.conf.json, fais-le manuellement dans ton repo
      # ou décommente ce step 'jq' pour le retirer automatiquement s'il existe.
      # - name: Remove pubkey (optional)
      #   run: |
      #     if command -v jq >/dev/null 2>&1; then
      #       if [ -f src-tauri/tauri.conf.json ]; then
      #         tmp=$(mktemp)
      #         jq 'del(.tauri.bundle.pubkey) // .' src-tauri/tauri.conf.json > "$tmp" && mv "$tmp" src-tauri/tauri.conf.json
      #       fi
      #     fi

      - name: Build (Tauri)
        uses: tauri-apps/tauri-action@v0
        env:
          # Si tu signes, renseigne les secrets requis. Pour un build non signé, laisse vide.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # La tauri-action détecte pnpm automatiquement
          args: ""
          # Si tu veux forcer le script: pnpm tauri build
          # tauriScript: pnpm tauri build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quantframe-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/**
            src-tauri/target/release/*.exe
            src-tauri/target/release/*.AppImage
            src-tauri/target/release/*.msi
            src-tauri/target/release/*.deb
          if-no-files-found: warn

  release:
    name: Release (tagged)
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            **/bundle/**/*
            **/*.exe
            **/*.AppImage
            **/*.msi
            **/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
